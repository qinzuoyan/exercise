//
// 根据排列组合：
//
// - 以非 0 开头的 1 位上有 9 个选择
// - 第二位多 1 个 0 选择，少 1 个第一位的选择，也是 9 个选择
// - 第三位少了 2 个选择，有 8 个选择
// - ……
// - 算出几位数的选择后，加上比他少一位的数的个数就是答案。
//
// 翻译成递推公式就是：
//
// f[1] = 9 + f[0];
// f[2] = 9 * 9 + f[1];
// f[3] = 9 * 9 * 8 + f[2];
// f[4] = 9 * 9 * 8 * 7 + f[3];
//

class Solution {
 public:
  int countNumbersWithUniqueDigits(int n) {
    int r = 1;
    for (int i = 1; i <= n; i++) {
      int k = 9;
      for (int j = 1; j < i; j++) {
        k *= (10 - j);
      }
      r += k;
    }
    return r;
  }
};
